#!/bin/bash
# Set up some testSets with some tests.

. "$SHEST_SCRIPT" "--doNothing"

beginNestedShest

# Populate with some testSets and tests.
mkdir -p shest/unit/testSets/0{0,1,2}testSet
cp shest/unit/myFirstStage/exampleTest shest/unit/testSets/00testSet/00test
cp shest/unit/myFirstStage/exampleTest shest/unit/testSets/00testSet/01test
cp shest/unit/myFirstStage/exampleTest shest/unit/testSets/00testSet/02test
cp shest/unit/myFirstStage/exampleTest shest/unit/testSets/00testSet/03test
cp shest/unit/myFirstStage/exampleTest shest/unit/testSets/00testSet/04test
cp shest/unit/myFirstStage/exampleTest shest/unit/testSets/00testSet/05test
cp shest/unit/myFirstStage/exampleTest shest/unit/testSets/00testSet/06test
cp shest/unit/myFirstStage/exampleTest shest/unit/testSets/00testSet/07test
cp shest/unit/myFirstStage/exampleTest shest/unit/testSets/00testSet/08test

cp shest/unit/testSets/00testSet/* shest/unit/testSets/01testSet
cp shest/unit/testSets/00testSet/* shest/unit/testSets/02testSet

# Trim out the previous test so it doesn't pollute the results.
rm -Rf shest/unit/myFirstStage

# Do the work.
"$SHEST_SCRIPT" ## Test this.

# How many tests did we run? - This is using the assumptions that there is only our
numberOfTests="$(wc -l shest/tmp/results.csv.inside | awk '{print $1}')"

endNestedShest

expect_exitCode 0
expect_value 27 "$numberOfTests" "Number of tests."
